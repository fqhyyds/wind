append_bndbox.py
使用 OpenCV 和 NumPy 库在给定的图像上绘制边界框（Bounding Box），并将绘制后的图像保存到指定的输出路径。适用于图像标注任务，其中边界框坐标是从其他源（如标注工具或网络）获得的，并且需要将它们应用到原始图像上以便后续的处理或分析。

check_dataset.py
加载图像数据和相应的标签，然后随机选择16张图像，并使用Matplotlib库在同一张图中以4x4的网格布局显示这些图像及其标签。通常用于数据可视化，特别是在机器学习和图像处理任务中，它可以帮助开发者或研究人员快速查看数据样本，例如在训练图像分类模型时查看不同类别的图像。

create_dataset.py
从一个CSV文件中读取图像的名称和损坏程度，然后加载这些图像，对它们进行调整（例如缩放），并将它们和损坏程度一起保存为NumPy数组。通常用于数据预处理，特别是在准备图像数据用于机器学习或深度学习模型训练时。通过这种方式，图像数据可以被标准化和保存。

create_dataset_individual.py
从一个CSV文件中读取图像的名称和损坏程度，然后根据这些信息加载相应的图像，对它们进行调整（例如缩放），并将它们和损坏程度一起保存为NumPy数组。用于数据预处理，特别是在准备图像数据用于机器学习或深度学习模型训练时。


make_predictions.py
加载一个预训练的Keras模型，评估该模型在测试数据集上的性能，并根据模型的预测结果对图像进行标注，并将标注后的图像保存到指定路径。